# vi: ft=bash

APP="invest"

# We'll be using the production machine for building the app
BUILD_HOST="invest.i365.tech"
BUILD_USER="ubuntu"
BUILD_AT="/home/ubuntu/app_build"

# This is where the app will be served from
PRODUCTION_HOSTS="invest.i365.tech"
PRODUCTION_USER="ubuntu"
DELIVER_TO="/home/ubuntu/app_release"

# Automatically generate version numbers for builds
# (https://github.com/edeliver/edeliver/wiki/Auto-Versioning)
AUTO_VERSION=commit-count+git-revision+branch-unless-master

# Copy the prod.secret.exs to the build directory
pre_erlang_get_and_update_deps() {
  local _prod_secret_path="/home/$BUILD_USER/app_config/prod.secret.exs"

  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'
    "
  fi
}

# Source environment variables and build static assets
pre_erlang_clean_compile() {
  status "Build static assets"
  __sync_remote "
    set -e
    . /home/$PRODUCTION_USER/invest.env
    # for api server, no need to compresses static files
    # cd '$BUILD_AT'
    # mkdir -p priv/static
    # APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phx.digest.clean $SILENCE
    # npm install --prefix assets
    # npm run deploy --prefix assets
    # APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phx.digest $SILENCE
  "
}

# symlink static assets to the release location after deploying a release
symlink_static(){
  status "Symlinking statics"
  __sync_remote "
    set -e
    cp -r $BUILD_AT/priv/static $DELIVER_TO/$APP/releases/$VERSION/static
    ln -sfn $DELIVER_TO/$APP/releases/$VERSION/static $DELIVER_TO
  "
}

# post_extract_release_archive() {
  # symlink_static
# }

# post_upgrade_release() {
  # symlink_static
# }

# Temporary workaround from https://github.com/edeliver/edeliver/issues/314#issuecomment-522151151
# start_erl.data is not being upgraded when new release is deployed
# should not be necessary once a new distillery version is released (> 2.1.1):
# https://github.com/bitwalker/distillery/issues/729
post_extract_release_archive() {
  status "Removing start_erl.data"
  __remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e
    mkdir -p $DELIVER_TO/$APP/var $SILENCE
    cd $DELIVER_TO/$APP/var $SILENCE
    rm -f start_erl.data $SILENCE
  "
}